// <auto-generated />
using System;
using LiquorStore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LiquorStore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221207185238_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LiquorStore.Entities.AddressEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cidade");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDeCriacao");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Bairro");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Estado");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Rua");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDeAtualizacao");

                    b.HasKey("Id");

                    b.ToTable("Endereco");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9d27afe4-cedd-440c-bee9-612633e6a2e3"),
                            City = "Fortaleza",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 49, DateTimeKind.Local).AddTicks(185),
                            Neighborhood = "Aerolândia",
                            State = "CE",
                            Street = "Raul Barbosa",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("fda23b7b-f8c5-4753-85b7-3dafb334967f"),
                            City = "Fortaleza",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 51, DateTimeKind.Local).AddTicks(9151),
                            Neighborhood = "Jacarecanga",
                            State = "CE",
                            Street = "José Jatahy",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f9b1e80d-850e-4221-9cf0-7f72324865a6"),
                            City = "Fortaleza",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 51, DateTimeKind.Local).AddTicks(9316),
                            Neighborhood = "Alvaro Weyne",
                            State = "CE",
                            Street = "Francisco SA",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("17005f01-a5e2-484f-8231-54b7d7d44149"),
                            City = "Fortaleza",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 51, DateTimeKind.Local).AddTicks(9335),
                            Neighborhood = "Bairro Ellery",
                            State = "CE",
                            Street = "Tenente Lisboa",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5330bb18-fd6a-4dea-9b91-3baa22c17d2b"),
                            City = "Fortaleza",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 51, DateTimeKind.Local).AddTicks(9351),
                            Neighborhood = "Mondubim",
                            State = "CE",
                            Street = "João Gentil",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("73f09bb3-56d9-491f-b100-31786f6a4d79"),
                            City = "Fortaleza",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 51, DateTimeKind.Local).AddTicks(9375),
                            Neighborhood = "Papicu",
                            State = "CE",
                            Street = "Manoel Sátiro",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("06fb4a76-3aa1-40c7-9f43-183090793809"),
                            City = "Fortaleza",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 51, DateTimeKind.Local).AddTicks(9496),
                            Neighborhood = "Pirambu",
                            State = "CE",
                            Street = "Desembargador Lauro Nogueira",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("dcd2bdb5-93ce-4810-ac85-5faff4996546"),
                            City = "Fortaleza",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 51, DateTimeKind.Local).AddTicks(9516),
                            Neighborhood = "Sapiranga",
                            State = "CE",
                            Street = "Cantelo Branco",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9c06c239-c51b-4a89-b70f-902c2289ce9d"),
                            City = "Fortaleza",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 51, DateTimeKind.Local).AddTicks(9532),
                            Neighborhood = "Jóquei Clube",
                            State = "CE",
                            Street = "Mãe Lisboa",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b8caa459-b828-47c0-8eb3-b2186b509807"),
                            City = "Fortaleza",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 51, DateTimeKind.Local).AddTicks(9550),
                            Neighborhood = "Bom Fim",
                            State = "CE",
                            Street = "Bom Fim",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LiquorStore.Entities.LegalPersonEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CNPJ");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empresa");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDeCriacao");

                    b.Property<string>("Representative")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Representante");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDeAtualizacao");

                    b.HasKey("Id");

                    b.HasIndex("CNPJ")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("CNPJ");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d062100-3fc1-434d-9c3a-8be050138231"),
                            CNPJ = "42.826.952/0001-09",
                            CompanyName = "BlackRock Bebidas",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 56, DateTimeKind.Local).AddTicks(5058),
                            Representative = "João",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("96e2aee6-b957-480d-8db4-dc91f6126385"),
                            CNPJ = "99.433.240/0001-47",
                            CompanyName = "Gela Guela",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 56, DateTimeKind.Local).AddTicks(5643),
                            Representative = "Leandro",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1d713bc5-1157-4962-9ca9-77e8e1b6616e"),
                            CNPJ = "43.699.193/0001-23",
                            CompanyName = "Cerveja e Amigos",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 56, DateTimeKind.Local).AddTicks(5667),
                            Representative = "Maria",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("28804bcf-c9cb-4b66-b21e-3a099b2cd205"),
                            CNPJ = "53.388.896/0001-94",
                            CompanyName = "Cervejeiro Industria de Bebidas",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 56, DateTimeKind.Local).AddTicks(5682),
                            Representative = "Ana",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("75e92fbd-f222-4efd-8f61-85686ee4fa6c"),
                            CNPJ = "43.755.744/0001-29",
                            CompanyName = "SS Distribuidora",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 56, DateTimeKind.Local).AddTicks(5698),
                            Representative = "Iago",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a5a7b0c4-5b44-47d7-a82b-5c081eb04c6a"),
                            CNPJ = "41.891.718/0001-00",
                            CompanyName = "BR Bebidas",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 56, DateTimeKind.Local).AddTicks(5759),
                            Representative = "Mateus",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9766368e-6cff-4eca-aaaf-ad51d47dfcae"),
                            CNPJ = "08.391.986/0001-80",
                            CompanyName = "Barato 24H",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 56, DateTimeKind.Local).AddTicks(5775),
                            Representative = "Lucas",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("73a08f06-7a0b-4378-a483-04125276ff23"),
                            CNPJ = "30.474.886/0001-76",
                            CompanyName = "Atacadão das Bebidas",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 56, DateTimeKind.Local).AddTicks(5791),
                            Representative = "Pedro",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f821a712-a18f-4fc3-a877-7ccac48823c2"),
                            CNPJ = "82.531.763/0001-23",
                            CompanyName = "Adega 2000",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 56, DateTimeKind.Local).AddTicks(5806),
                            Representative = "Carla",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("db39ac3e-21d3-4520-b35f-976d4b247905"),
                            CNPJ = "36.175.312/0001-83",
                            CompanyName = "Bebidas Esfera",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 56, DateTimeKind.Local).AddTicks(5823),
                            Representative = "Carlos",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LiquorStore.Entities.PhysicalPersonEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDeNascimento");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CPF");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDeCriacao");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDeAtualizacao");

                    b.HasKey("Id");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("CPF");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c482574b-313b-44ec-ac9b-5e0049a81455"),
                            BirthDate = new DateTime(1990, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CPF = "008.143.880-00",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 52, DateTimeKind.Local).AddTicks(6349),
                            Name = "João Miguel",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bda2d2f8-2fa2-445d-9373-91aa6650b7d5"),
                            BirthDate = new DateTime(1998, 10, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CPF = "718.274.630-15",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 52, DateTimeKind.Local).AddTicks(7319),
                            Name = "Maria Clara",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e3ff5ee7-96f5-4202-b962-76263d5d8c4f"),
                            BirthDate = new DateTime(1997, 5, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CPF = "695.478.320-00",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 52, DateTimeKind.Local).AddTicks(7348),
                            Name = "Samuel",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d633a3ec-c604-494c-b52f-40346dcc3891"),
                            BirthDate = new DateTime(1995, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CPF = "635.309.750-60",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 52, DateTimeKind.Local).AddTicks(7365),
                            Name = "Arthur",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("02660a38-5395-45a0-91df-d31cd2399644"),
                            BirthDate = new DateTime(2001, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CPF = "503.443.210-29",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 52, DateTimeKind.Local).AddTicks(7382),
                            Name = "Arthur",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e50ad915-b45c-4e04-87de-9f4818e91e80"),
                            BirthDate = new DateTime(1996, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CPF = "416.121.070-10",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 52, DateTimeKind.Local).AddTicks(7402),
                            Name = "Theo",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ae75e1d9-6479-40c2-8c02-20790b5792c0"),
                            BirthDate = new DateTime(1998, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CPF = "142.305.050-94",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 52, DateTimeKind.Local).AddTicks(7419),
                            Name = "Laura",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ecae8096-3c7a-4ca3-9ed8-80b918ef673c"),
                            BirthDate = new DateTime(1998, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CPF = "102.663.320-64",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 52, DateTimeKind.Local).AddTicks(7435),
                            Name = "Maria Julia",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8dbd92f9-160f-4566-8761-ed0091242c89"),
                            BirthDate = new DateTime(1999, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CPF = "037.680.480-71",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 52, DateTimeKind.Local).AddTicks(7452),
                            Name = "Bernardo",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9fbc4348-7fb5-48a6-bf77-495ab7ced1ef"),
                            BirthDate = new DateTime(2002, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CPF = "010.898.400-12",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 52, DateTimeKind.Local).AddTicks(7469),
                            Name = "Davi",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LiquorStore.Entities.ProductsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint")
                        .HasColumnName("Quantidade");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDeCriacao");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("Preco");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CodigoProduto");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeProduto");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Tipo");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDeAtualizacao");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProductCode")
                        .IsUnique();

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca488ecc-0c36-45b0-a025-6f2fbfe0aff4"),
                            Amount = 100L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(2293),
                            Price = 140.0,
                            ProductCode = "1010/2022",
                            ProductName = "Whisky Jack Daniels 1000 Ml",
                            Type = "Whisky",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a02baed8-52e8-469e-9ad3-cf256e29a9f0"),
                            Amount = 100L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(3156),
                            Price = 100.0,
                            ProductCode = "2020/2022",
                            ProductName = "WHISKY JOHNNIE WALKER RED LABEL 1L",
                            Type = "Whisky",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7c7fc09c-ef38-4bb2-af69-beda911ad77b"),
                            Amount = 100L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(3181),
                            Price = 80.0,
                            ProductCode = "3030/2022",
                            ProductName = "Whisky Black & White 1L",
                            Type = "Whisky",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2d4b6438-d86c-46d4-b896-64cfa3869a4c"),
                            Amount = 100L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(3239),
                            Price = 7.5,
                            ProductCode = "4040/2022",
                            ProductName = "Budweiser 330ml",
                            Type = "Cerveja",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("37b1ae77-8591-4b78-96a6-9b59165acfc8"),
                            Amount = 100L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(3260),
                            Price = 8.0,
                            ProductCode = "5050/2022",
                            ProductName = "Cerveja Heineken Premium Puro Malte Lager",
                            Type = "Cerveja",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("906aa293-31bf-4427-a3ec-64120df57b0c"),
                            Amount = 100L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(3279),
                            Price = 7.0,
                            ProductCode = "6060/2022",
                            ProductName = "Cerveja Spaten Puro Malte, Long Neck com 355ml Spaten 355",
                            Type = "Cerveja",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e933657b-2c20-41e2-9f66-9e6836ee8ee0"),
                            Amount = 100L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(3296),
                            Price = 3.5,
                            ProductCode = "7070/2022",
                            ProductName = "Cerveja Brahma Duplo Malte Puro Malte Lata 350ml",
                            Type = "Cerveja",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("47538b32-2f9b-4a25-b97c-b15da6332da1"),
                            Amount = 100L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(3312),
                            Price = 9.0,
                            ProductCode = "8080/2022",
                            ProductName = "Coca-Cola 2L",
                            Type = "Refrigerante",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("53cee177-5425-4f77-84dc-9afd35e6b9c0"),
                            Amount = 100L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(3328),
                            Price = 7.0,
                            ProductCode = "9090/2022",
                            ProductName = "Guaraná 2L",
                            Type = "Refrigerante",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("86337ec5-cb59-493f-8e0f-2501c2125e51"),
                            Amount = 100L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(3345),
                            Price = 7.0,
                            ProductCode = "9890/2022",
                            ProductName = "Fanta Laranja 2L",
                            Type = "Refrigerante",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("def251a1-69e5-4d8d-a6a6-3710154eb6b3"),
                            Amount = 100L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(3361),
                            Price = 2.5,
                            ProductCode = "5590/2022",
                            ProductName = "Água mineral",
                            Type = "Água",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LiquorStore.Entities.SalesHistoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint")
                        .HasColumnName("Quantidade");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDeCriacao");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("Preco");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CodigoProduto");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDeAtualizacao");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.ToTable("HistoricoDeVendas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("95742b06-0dd0-45fa-81dc-706f79f9552e"),
                            Amount = 3L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(9029),
                            Price = 7.5,
                            ProductId = new Guid("def251a1-69e5-4d8d-a6a6-3710154eb6b3"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ebed77af-213b-498b-95f0-b5ddf1acf184"),
                            Amount = 2L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(9701),
                            Price = 14.0,
                            ProductId = new Guid("86337ec5-cb59-493f-8e0f-2501c2125e51"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("fd060ef5-10d7-4ac1-a799-5f2a81d883ab"),
                            Amount = 2L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(9727),
                            Price = 18.0,
                            ProductId = new Guid("47538b32-2f9b-4a25-b97c-b15da6332da1"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7b95bc36-dc41-488e-9741-cafeaaa5a495"),
                            Amount = 1L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(9745),
                            Price = 140.0,
                            ProductId = new Guid("ca488ecc-0c36-45b0-a025-6f2fbfe0aff4"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e0cde259-a819-4bed-8c06-6875594d5df0"),
                            Amount = 3L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(9763),
                            Price = 100.0,
                            ProductId = new Guid("a02baed8-52e8-469e-9ad3-cf256e29a9f0"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d634a500-f1af-4629-991a-684e2c72c944"),
                            Amount = 4L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(9784),
                            Price = 28.0,
                            ProductId = new Guid("2d4b6438-d86c-46d4-b896-64cfa3869a4c"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c7877672-a069-49d8-aef4-3892ef4dfdf8"),
                            Amount = 10L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(9802),
                            Price = 90.0,
                            ProductId = new Guid("47538b32-2f9b-4a25-b97c-b15da6332da1"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6d700b6f-c1f4-49ce-99c0-c2eabd26e05e"),
                            Amount = 20L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(9819),
                            Price = 150.0,
                            ProductId = new Guid("2d4b6438-d86c-46d4-b896-64cfa3869a4c"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9e77f700-9538-423b-86ca-576cb7da1f17"),
                            Amount = 7L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(9836),
                            Price = 17.5,
                            ProductId = new Guid("def251a1-69e5-4d8d-a6a6-3710154eb6b3"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8ca5419d-a561-4f61-a3ba-ee4a4dbb1cf4"),
                            Amount = 9L,
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 55, DateTimeKind.Local).AddTicks(9896),
                            Price = 63.0,
                            ProductId = new Guid("906aa293-31bf-4427-a3ec-64120df57b0c"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LiquorStore.Entities.ShoppingCartEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<double>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("Quantia");

                    b.Property<Guid?>("ClientId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Cliente");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDeCriacao");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CodigoProduto");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDeAtualizacao");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.ToTable("CarrinhoDeCompras");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3b5336d8-472f-48af-87ee-309104ce2445"),
                            Amount = 1.0,
                            ClientId = new Guid("1949929f-ac10-4bef-a83a-f617b3f42018"),
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 57, DateTimeKind.Local).AddTicks(2833),
                            ProductId = new Guid("ca488ecc-0c36-45b0-a025-6f2fbfe0aff4"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("103f2129-c7be-433b-8a62-34a5167823b9"),
                            Amount = 1.0,
                            ClientId = new Guid("1949929f-ac10-4bef-a83a-f617b3f42018"),
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 57, DateTimeKind.Local).AddTicks(3501),
                            ProductId = new Guid("a02baed8-52e8-469e-9ad3-cf256e29a9f0"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3c80653a-c85d-4602-8807-71297ae74f6f"),
                            Amount = 1.0,
                            ClientId = new Guid("1949929f-ac10-4bef-a83a-f617b3f42018"),
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 57, DateTimeKind.Local).AddTicks(3528),
                            ProductId = new Guid("7c7fc09c-ef38-4bb2-af69-beda911ad77b"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1ec52c74-c51a-4f2c-8820-8db727e10ed6"),
                            Amount = 1.0,
                            ClientId = new Guid("6617afd4-60e4-415c-908d-4bd0ac005f14"),
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 57, DateTimeKind.Local).AddTicks(3549),
                            ProductId = new Guid("def251a1-69e5-4d8d-a6a6-3710154eb6b3"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("42bd6db1-855c-494f-bcea-2841774f49c8"),
                            Amount = 1.0,
                            ClientId = new Guid("a6158c79-8802-485d-8e0c-12b02574c81b"),
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 57, DateTimeKind.Local).AddTicks(3609),
                            ProductId = new Guid("86337ec5-cb59-493f-8e0f-2501c2125e51"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("24a7ab91-bfc5-4846-b268-ac715823b28a"),
                            Amount = 1.0,
                            ClientId = new Guid("e3f68fb2-2004-4c8d-900d-f9ec9bd7c756"),
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 57, DateTimeKind.Local).AddTicks(3640),
                            ProductId = new Guid("e933657b-2c20-41e2-9f66-9e6836ee8ee0"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d43cb3ef-9004-4db1-a546-0c9d65a97bf5"),
                            Amount = 1.0,
                            ClientId = new Guid("6617afd4-60e4-415c-908d-4bd0ac005f14"),
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 57, DateTimeKind.Local).AddTicks(3660),
                            ProductId = new Guid("37b1ae77-8591-4b78-96a6-9b59165acfc8"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("243d15cd-226e-43dd-a2fb-8022cadb3053"),
                            Amount = 1.0,
                            ClientId = new Guid("6617afd4-60e4-415c-908d-4bd0ac005f14"),
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 57, DateTimeKind.Local).AddTicks(3681),
                            ProductId = new Guid("e933657b-2c20-41e2-9f66-9e6836ee8ee0"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0157258b-dfa9-4445-a5d4-31ffeb176fb3"),
                            Amount = 1.0,
                            ClientId = new Guid("59d200e2-5f8a-48a9-9cda-d012b9271ab3"),
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 57, DateTimeKind.Local).AddTicks(3700),
                            ProductId = new Guid("2d4b6438-d86c-46d4-b896-64cfa3869a4c"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6965cec1-65e3-4ee5-abf2-f299f9f8981a"),
                            Amount = 1.0,
                            ClientId = new Guid("564f335f-35bd-430b-a330-541403ade35f"),
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 57, DateTimeKind.Local).AddTicks(3721),
                            ProductId = new Guid("2d4b6438-d86c-46d4-b896-64cfa3869a4c"),
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LiquorStore.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EnderecoId");

                    b.Property<Guid?>("CNPJId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CNPJId");

                    b.Property<Guid?>("CPFId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPFId");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Contato");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDeCriacao");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Email");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDeAtualizacao");

                    b.Property<int>("UserType")
                        .HasColumnType("int")
                        .HasColumnName("Tipo");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CNPJId");

                    b.HasIndex("CPFId");

                    b.HasIndex("ContactNumber")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1526ebb7-0765-48c6-8e4c-7126c7e8f882"),
                            AddressId = new Guid("9d27afe4-cedd-440c-bee9-612633e6a2e3"),
                            CNPJId = new Guid("1d062100-3fc1-434d-9c3a-8be050138231"),
                            ContactNumber = "(88) 37762-4466",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(3169),
                            Email = "joao@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 2
                        },
                        new
                        {
                            Id = new Guid("222c978d-3f84-4700-83b5-f930eeabdd0e"),
                            AddressId = new Guid("fda23b7b-f8c5-4753-85b7-3dafb334967f"),
                            CNPJId = new Guid("96e2aee6-b957-480d-8db4-dc91f6126385"),
                            ContactNumber = "(88) 52351-7612",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(4678),
                            Email = "leandro@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 2
                        },
                        new
                        {
                            Id = new Guid("6ad5ddc8-4530-479b-8a0e-a24f3405601f"),
                            AddressId = new Guid("f9b1e80d-850e-4221-9cf0-7f72324865a6"),
                            CNPJId = new Guid("1d713bc5-1157-4962-9ca9-77e8e1b6616e"),
                            ContactNumber = "(88) 15138-5437",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(4709),
                            Email = "maria@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 2
                        },
                        new
                        {
                            Id = new Guid("0bd4d5b7-04a4-492f-85db-f4f390859248"),
                            AddressId = new Guid("17005f01-a5e2-484f-8231-54b7d7d44149"),
                            CNPJId = new Guid("28804bcf-c9cb-4b66-b21e-3a099b2cd205"),
                            ContactNumber = "(88) 89470-2432",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(4733),
                            Email = "ana@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 2
                        },
                        new
                        {
                            Id = new Guid("1cde39df-b5c7-4f4a-9f1a-987e148c3075"),
                            AddressId = new Guid("5330bb18-fd6a-4dea-9b91-3baa22c17d2b"),
                            CNPJId = new Guid("75e92fbd-f222-4efd-8f61-85686ee4fa6c"),
                            ContactNumber = "(88) 60675-1641",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(4755),
                            Email = "iago@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 2
                        },
                        new
                        {
                            Id = new Guid("18776840-d661-4bd4-88fd-21d3389ba3e8"),
                            AddressId = new Guid("73f09bb3-56d9-491f-b100-31786f6a4d79"),
                            CNPJId = new Guid("a5a7b0c4-5b44-47d7-a82b-5c081eb04c6a"),
                            ContactNumber = "(88) 58046-6592",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(4780),
                            Email = "mateus@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 2
                        },
                        new
                        {
                            Id = new Guid("b132a393-5404-4d47-b540-5d21a18449d5"),
                            AddressId = new Guid("06fb4a76-3aa1-40c7-9f43-183090793809"),
                            CNPJId = new Guid("9766368e-6cff-4eca-aaaf-ad51d47dfcae"),
                            ContactNumber = "(88) 79824-2804",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(4887),
                            Email = "lucas@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 2
                        },
                        new
                        {
                            Id = new Guid("8dc7eac1-aa1b-4cc2-8d12-1e6e772b9352"),
                            AddressId = new Guid("dcd2bdb5-93ce-4810-ac85-5faff4996546"),
                            CNPJId = new Guid("73a08f06-7a0b-4378-a483-04125276ff23"),
                            ContactNumber = "(88) 13470-1323",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(4909),
                            Email = "pedro@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 2
                        },
                        new
                        {
                            Id = new Guid("4d77813e-46d9-436b-a14c-6ff82912ae63"),
                            AddressId = new Guid("9c06c239-c51b-4a89-b70f-902c2289ce9d"),
                            CNPJId = new Guid("f821a712-a18f-4fc3-a877-7ccac48823c2"),
                            ContactNumber = "(88) 86602-5652",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(4929),
                            Email = "carla@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 2
                        },
                        new
                        {
                            Id = new Guid("e2b0ad12-2aba-4635-b647-3c6861809064"),
                            AddressId = new Guid("b8caa459-b828-47c0-8eb3-b2186b509807"),
                            CNPJId = new Guid("db39ac3e-21d3-4520-b35f-976d4b247905"),
                            ContactNumber = "(88) 32751-5601",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(4952),
                            Email = "carlos@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 2
                        },
                        new
                        {
                            Id = new Guid("1949929f-ac10-4bef-a83a-f617b3f42018"),
                            AddressId = new Guid("9d27afe4-cedd-440c-bee9-612633e6a2e3"),
                            CPFId = new Guid("c482574b-313b-44ec-ac9b-5e0049a81455"),
                            ContactNumber = "(88) 84971-5917",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(4973),
                            Email = "joaomiguel@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 1
                        },
                        new
                        {
                            Id = new Guid("59315f8a-ccd3-4a63-a202-93e41629ca8c"),
                            AddressId = new Guid("fda23b7b-f8c5-4753-85b7-3dafb334967f"),
                            CPFId = new Guid("bda2d2f8-2fa2-445d-9373-91aa6650b7d5"),
                            ContactNumber = "(88) 88991-2994",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(5259),
                            Email = "mariaclara@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 1
                        },
                        new
                        {
                            Id = new Guid("59d200e2-5f8a-48a9-9cda-d012b9271ab3"),
                            AddressId = new Guid("f9b1e80d-850e-4221-9cf0-7f72324865a6"),
                            CPFId = new Guid("e3ff5ee7-96f5-4202-b962-76263d5d8c4f"),
                            ContactNumber = "(88) 34644-3298",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(5308),
                            Email = "samuel@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 1
                        },
                        new
                        {
                            Id = new Guid("6b412a8a-c604-405b-93b3-a5608f38cd15"),
                            AddressId = new Guid("17005f01-a5e2-484f-8231-54b7d7d44149"),
                            CPFId = new Guid("d633a3ec-c604-494c-b52f-40346dcc3891"),
                            ContactNumber = "(88) 66719-4833",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(5336),
                            Email = "arthur2022@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 1
                        },
                        new
                        {
                            Id = new Guid("064d3464-78f3-42c2-a7bb-1dc36e4c7374"),
                            AddressId = new Guid("5330bb18-fd6a-4dea-9b91-3baa22c17d2b"),
                            CPFId = new Guid("02660a38-5395-45a0-91df-d31cd2399644"),
                            ContactNumber = "(88) 18411-9343",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(5360),
                            Email = "arthur@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 1
                        },
                        new
                        {
                            Id = new Guid("e3f68fb2-2004-4c8d-900d-f9ec9bd7c756"),
                            AddressId = new Guid("73f09bb3-56d9-491f-b100-31786f6a4d79"),
                            CPFId = new Guid("e50ad915-b45c-4e04-87de-9f4818e91e80"),
                            ContactNumber = "(88) 36709-6920",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(5382),
                            Email = "theo@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 1
                        },
                        new
                        {
                            Id = new Guid("a6158c79-8802-485d-8e0c-12b02574c81b"),
                            AddressId = new Guid("06fb4a76-3aa1-40c7-9f43-183090793809"),
                            CPFId = new Guid("ae75e1d9-6479-40c2-8c02-20790b5792c0"),
                            ContactNumber = "(88) 31374-1367",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(5402),
                            Email = "laura@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 1
                        },
                        new
                        {
                            Id = new Guid("776d4164-eaec-4cee-afef-3a128e33399a"),
                            AddressId = new Guid("dcd2bdb5-93ce-4810-ac85-5faff4996546"),
                            CPFId = new Guid("ecae8096-3c7a-4ca3-9ed8-80b918ef673c"),
                            ContactNumber = "(88) 76190-0685",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(5425),
                            Email = "mariajulia@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 1
                        },
                        new
                        {
                            Id = new Guid("6617afd4-60e4-415c-908d-4bd0ac005f14"),
                            AddressId = new Guid("9c06c239-c51b-4a89-b70f-902c2289ce9d"),
                            CPFId = new Guid("8dbd92f9-160f-4566-8761-ed0091242c89"),
                            ContactNumber = "(88) 24331-4040",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(5445),
                            Email = "bernardo@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 1
                        },
                        new
                        {
                            Id = new Guid("564f335f-35bd-430b-a330-541403ade35f"),
                            AddressId = new Guid("b8caa459-b828-47c0-8eb3-b2186b509807"),
                            CPFId = new Guid("9fbc4348-7fb5-48a6-bf77-495ab7ced1ef"),
                            ContactNumber = "(88) 45919-0908",
                            CreationDate = new DateTime(2022, 12, 7, 15, 52, 38, 54, DateTimeKind.Local).AddTicks(5465),
                            Email = "davi@gmail.com",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 1
                        });
                });

            modelBuilder.Entity("LiquorStore.Entities.SalesHistoryEntity", b =>
                {
                    b.HasOne("LiquorStore.Entities.ProductsEntity", "Products")
                        .WithMany("SalesHistories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("LiquorStore.Entities.ShoppingCartEntity", b =>
                {
                    b.HasOne("LiquorStore.Entities.UserEntity", "User")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiquorStore.Entities.ProductsEntity", "Products")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LiquorStore.Entities.UserEntity", b =>
                {
                    b.HasOne("LiquorStore.Entities.AddressEntity", "Address")
                        .WithMany("UserSeller")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiquorStore.Entities.LegalPersonEntity", "LegalPerson")
                        .WithMany("User")
                        .HasForeignKey("CNPJId");

                    b.HasOne("LiquorStore.Entities.PhysicalPersonEntity", "PhysicalPerson")
                        .WithMany("User")
                        .HasForeignKey("CPFId");

                    b.Navigation("Address");

                    b.Navigation("LegalPerson");

                    b.Navigation("PhysicalPerson");
                });

            modelBuilder.Entity("LiquorStore.Entities.AddressEntity", b =>
                {
                    b.Navigation("UserSeller");
                });

            modelBuilder.Entity("LiquorStore.Entities.LegalPersonEntity", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("LiquorStore.Entities.PhysicalPersonEntity", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("LiquorStore.Entities.ProductsEntity", b =>
                {
                    b.Navigation("SalesHistories");

                    b.Navigation("ShoppingCarts");
                });

            modelBuilder.Entity("LiquorStore.Entities.UserEntity", b =>
                {
                    b.Navigation("ShoppingCarts");
                });
#pragma warning restore 612, 618
        }
    }
}
